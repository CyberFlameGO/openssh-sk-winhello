name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          install: 'base-devel gcc openssl-devel'

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Generate Configurations
        run: autoreconf --install

      - name: Configure
        run: ./configure

      - name: Make
        run: make

      - name: Make Source Package
        run: make dist

      - name: Upload tarball
        uses: actions/upload-artifact@v2
        with:
          name: tarball
          path: winhello-*.tar.gz

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: binary
          path: src/.libs/winhello.dll

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4.1.7

      - name: Detect Source Package Name
        run: echo "TARNAME=`ls ./tarball`" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            This release is for version 8.4 of OpenSSH.
            [Installation guide](https://github.com/tavrez/openssh-sk-winhello/blob/master/README.md#install).
          draft: true
          commitish: master

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tarball/${{ env.TARNAME }}
          asset_name: ${{ env.TARNAME }}
          asset_content_type: application/gzip

      - name: Upload Binary Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binary/winhello.dll
          asset_name: winhello.dll
          asset_content_type: application/octet-stream
